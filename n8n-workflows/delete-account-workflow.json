{
  "name": "Delete Account",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "delete-account",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-delete-account",
      "name": "Webhook Delete Account",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [240, 300],
      "webhookId": "delete-account"
    },
    {
      "parameters": {
        "jsCode": "const authHeader = $input.item.json.headers?.authorization || $input.item.json.body?.token;\nconst token = authHeader?.replace('Bearer ', '');\n\nif (!token) {\n  return {\n    json: {\n      success: false,\n      error: 'Token requis',\n      respondWithError: true\n    }\n  };\n}\n\nreturn {\n  json: {\n    token: token\n  }\n};"
      },
      "id": "code-extract-token",
      "name": "Extract Token",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT user_id FROM sessions WHERE access_token = '{{ $json.token }}' AND expires_at > NOW() LIMIT 1",
        "options": {}
      },
      "id": "postgres-verify-token",
      "name": "Verify Token",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [680, 300],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "RCIgOlmToK7XFEry",
          "name": "job_automation_db"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const result = $input.first().json;\n\nif (!result || !result.user_id) {\n  return {\n    json: {\n      success: false,\n      error: 'Token invalide ou expiré',\n      respondWithError: true\n    }\n  };\n}\n\nreturn {\n  json: {\n    userId: result.user_id\n  }\n};"
      },
      "id": "code-check-token",
      "name": "Check Token",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, email FROM candidates WHERE id IN (SELECT id FROM candidates WHERE email = (SELECT email FROM users WHERE id = '{{ $json.userId }}')) LIMIT 1",
        "options": {}
      },
      "id": "postgres-get-candidate",
      "name": "Get Candidate ID",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1120, 300],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "RCIgOlmToK7XFEry",
          "name": "job_automation_db"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM sessions WHERE user_id = '{{ $json.userId }}'",
        "options": {}
      },
      "id": "postgres-delete-sessions",
      "name": "Delete Sessions",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1340, 200],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "RCIgOlmToK7XFEry",
          "name": "job_automation_db"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM applications WHERE candidate_id = (SELECT id FROM candidates WHERE email = (SELECT email FROM users WHERE id = '{{ $json.userId }}'))",
        "options": {}
      },
      "id": "postgres-delete-applications",
      "name": "Delete Applications",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1340, 300],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "RCIgOlmToK7XFEry",
          "name": "job_automation_db"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM candidates WHERE email = (SELECT email FROM users WHERE id = '{{ $json.userId }}')",
        "options": {}
      },
      "id": "postgres-delete-candidate",
      "name": "Delete Candidate",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1340, 400],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "RCIgOlmToK7XFEry",
          "name": "job_automation_db"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM users WHERE id = '{{ $json.userId }}'",
        "options": {}
      },
      "id": "postgres-delete-user",
      "name": "Delete User",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1560, 300],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "RCIgOlmToK7XFEry",
          "name": "job_automation_db"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return {\n  json: {\n    success: true,\n    message: 'Compte supprimé avec succès'\n  }\n};"
      },
      "id": "code-success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": true,\n  \"message\": \"Compte supprimé avec succès\"\n} }}",
        "options": {}
      },
      "id": "respond-success",
      "name": "Respond Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": false,\n  \"error\": $json.error\n} }}",
        "options": {
          "responseCode": 401
        }
      },
      "id": "respond-error",
      "name": "Respond Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [900, 500]
    }
  ],
  "connections": {
    "Webhook Delete Account": {
      "main": [
        [
          {
            "node": "Extract Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Token": {
      "main": [
        [
          {
            "node": "Verify Token",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify Token": {
      "main": [
        [
          {
            "node": "Check Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token": {
      "main": [
        [
          {
            "node": "Get Candidate ID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Candidate ID": {
      "main": [
        [
          {
            "node": "Delete Sessions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete Applications",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete Candidate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Sessions": {
      "main": [
        [
          {
            "node": "Delete User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Applications": {
      "main": [
        [
          {
            "node": "Delete User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Candidate": {
      "main": [
        [
          {
            "node": "Delete User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete User": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Respond Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c20750a766bf706ae816bbff3777385b2eef92cf9418f2aea21c75d2277c69c2"
  }
}
